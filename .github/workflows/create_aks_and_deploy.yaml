name: create-and-deploy

on:
  push:
    branches: [ main ]

env:
  # Reference parameters file
   PARAM_FILE: aks-parameters.json

jobs:
  create-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step ⿡: Read parameters
      - name: Load parameters
        id: params
        run: |
          echo "##[group]Loading parameters"
          SUBSCRIPTION_ID=$(jq -r '.subscriptionId' $PARAM_FILE)
          RESOURCE_GROUP=$(jq -r '.resourceGroup' $PARAM_FILE)
          CLUSTER_NAME=$(jq -r '.aksClusterName' $PARAM_FILE)
          ACR_NAME=$(jq -r '.acrName' $PARAM_FILE)
          IMAGE_NAME=$(jq -r '.imageName' $PARAM_FILE)
          NAMESPACE=$(jq -r '.namespace' $PARAM_FILE)
          echo "SUBSCRIPTION_ID=$SUBSCRIPTION_ID" >> $GITHUB_ENV
          echo "RESOURCE_GROUP=$RESOURCE_GROUP" >> $GITHUB_ENV
          echo "CLUSTER_NAME=$CLUSTER_NAME" >> $GITHUB_ENV
          echo "ACR_NAME=$ACR_NAME" >> $GITHUB_ENV
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "NAMESPACE=$NAMESPACE" >> $GITHUB_ENV
          echo "##[endgroup]"

      # Step ⿢: Azure Login (OIDC recommended)
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          auth-type: 'OIDC'

      # Step ⿣: AKS Context
      - name: Set AKS Context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      # Step ⿤: Build & Push Image to ACR
      - name: Build and Push Image
        uses: azure/docker-login@v2
        with:
          login-server: ${{ env.ACR_NAME }}.azurecr.io
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - run: |
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.run_number }} .
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.run_number }}

      # Step ⿥: Deploy to AKS
      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s/deployment.yml
          kubectl apply -f k8s/service.yml
          kubectl rollout status deployment/${{ env.IMAGE_NAME }} -n ${{ env.NAMESPACE }}
