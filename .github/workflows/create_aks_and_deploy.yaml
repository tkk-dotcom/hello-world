name: create-and-deploy

on:
  push:
    branches: [ main ]

# Reference parameters file
env:
  PARAM_FILE: aks-parameters.json

jobs:
  create-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Load parameters
        id: params
        run: |
          echo "##[group]Loading parameters"
          echo "Contents of $PARAM_FILE:"
          cat $PARAM_FILE
          echo "##[endgroup]"

          echo "Validating JSON syntax..."
          jq . $PARAM_FILE

          echo "Extracting values from $PARAM_FILE..."
          SUBSCRIPTION_ID=$(jq -r '.subscriptionId' $PARAM_FILE)
          RESOURCE_GROUP=$(jq -r '.resourceGroup' $PARAM_FILE)
          CLUSTER_NAME=$(jq -r '.aksClusterName' $PARAM_FILE)
          ACR_NAME=$(jq -r '.acrName' $PARAM_FILE)
          IMAGE_NAME=$(jq -r '.imageName' $PARAM_FILE)
          NAMESPACE=$(jq -r '.namespace' $PARAM_FILE)

          echo "##[group]Parsed Values"
          echo "Subscription ID: $SUBSCRIPTION_ID"
          echo "Resource Group:  $RESOURCE_GROUP"
          echo "AKS Cluster:     $CLUSTER_NAME"
          echo "ACR Name:        $ACR_NAME"
          echo "Image Name:      $IMAGE_NAME"
          echo "Namespace:       $NAMESPACE"
          echo "##[endgroup]"

          echo "RESOURCE_GROUP=$RESOURCE_GROUP" >> $GITHUB_ENV
          echo "CLUSTER_NAME=$CLUSTER_NAME" >> $GITHUB_ENV
          echo "ACR_NAME=$ACR_NAME" >> $GITHUB_ENV
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "NAMESPACE=$NAMESPACE" >> $GITHUB_ENV

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS Context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      - name: Build and Push Docker image
        run: |
          az acr login --name ${{ env.ACR_NAME }}
          docker build -t ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.run_number }} .
          docker push ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.run_number }}

      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s/deployment.yml
          kubectl apply -f k8s/service.yml
          kubectl rollout status deployment/${{ env.IMAGE_NAME }} -n ${{ env.NAMESPACEÂ }}
