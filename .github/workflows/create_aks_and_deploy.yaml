name: create-and-deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: RG-AKS-Hello

    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 1: Load parameters
      - name: Load parameters from JSON
        id: load_params
        run: |
         echo "Reading deployment parameters..."
         echo "Checking file content:"
         cat aks.parameters.json || echo "⚠ File not found!"
    
         echo "Validating JSON file..."
         jq . aks-parameters.json
    
         echo "Extracting values..."
         RESOURCE_GROUP=$(jq -r '.parameters.resourceGroup.value' aks.parameters.json)
         AKS_CLUSTER_NAME=$(jq -r '.parameters.aksClusterName.value' aks.parameters.json)
         ACR_NAME=$(jq -r '.parameters.acrName.value' aks.parameters.json)
         NAMESPACE=$(jq -r '.parameters.namespace.value' aks.parameters.json)

         echo "RESOURCE_GROUP=$RESOURCE_GROUP" >> $GITHUB_ENV
         echo "AKS_CLUSTER_NAME=$AKS_CLUSTER_NAME" >> $GITHUB_ENV
         echo "ACR_NAME=$ACR_NAME" >> $GITHUB_ENV
         echo "NAMESPACE=$NAMESPACE" >> $GITHUB_ENV

      # Step 2: Azure Login (OIDC)
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CLIENT_ID }}
          tenant-id: ${{ secrets.TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
         
      # Step 3: Set AKS Context
      - name: Set AKS Context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}

      # Step 4: Build and Push Docker image
      - name: Build and Push Docker image
        run: |
          echo "Logging into Azure Container Registry..."
          az acr login --name ${{ env.ACR_NAME }}

          IMAGE_TAG=${{ github.run_number }}
          IMAGE_FULL_NAME=${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:$IMAGE_TAG
          echo "Building image: $IMAGE_FULL_NAME"
          docker build -t $IMAGE_FULL_NAME .
          docker push $IMAGE_FULL_NAME

      # Step 5: Deploy to AKS
      - name: Deploy to AKS
        run: |
          kubectl set image deployment/${{ secrets.DEPLOYMENT_NAME }} \
            ${{ secrets.CONTAINER_NAME }}=${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.run_number }}
          kubectl rollout status deployment/${{ secrets.DEPLOYMENT_NAME }}
